// Here height
let header = document.querySelector('.header');
let home_hero = document.querySelector('.home__hero');

if (header && home_hero) {
    function heroHeight() {
        let header_height = header.getBoundingClientRect().height;

        if (header_height && window.innerWidth < 1025) {
            home_hero.style.minHeight = `calc(100dvh - ${header_height}px)`;
        }
    }

    heroHeight();

    window.addEventListener('resize', heroHeight);
}

// Home Rezult Margin Top
let result = document.querySelector('.result');

if (result) {
    function homeRezultMarginTop() {
        let rezult_height = result.getBoundingClientRect().height;

        if (rezult_height && window.innerWidth > 1024) {
            result.style.marginTop = `-${rezult_height / 2}px`;
        } else {
            result.style.marginTop = '0px';
        }
    }

    homeRezultMarginTop();

    window.addEventListener('resize', homeRezultMarginTop);
}

// Tabs
function tabs() {
    let tabs = document.querySelectorAll('.tab');

    if (tabs) {
        tabs.forEach(function (tab) {
            let tab_btns = tab.querySelectorAll('.tab__btn');
            let tab_blocks = tab.querySelectorAll('.tab__block');

            if (tab_btns && tab_blocks) {
                tab_btns.forEach(function (tab_btn) {
                    tab_btn.addEventListener('click', function (event) {
                        event.preventDefault();

                        if (!tab_btn.classList.remove('active')) {
                            tab_btns.forEach(function (btn) {
                                btn.classList.remove('active');
                            })

                            tab_btn.classList.add('active');

                            const activeTab = Array.from(tab_blocks).find(block =>
                                block.classList.contains('visible')
                            );

                            const nextTab = Array.from(tab_blocks).find(tab_block =>
                                tab_block.dataset.tab.trim() === tab_btn.dataset.tab.trim()
                            );

                            if (activeTab && activeTab !== nextTab) {
                                // 1. Приховуємо старий таб (opacity: 1 → 0)
                                activeTab.classList.remove('active');

                                setTimeout(() => {
                                    // 2. Через 0.4с ховаємо старий таб
                                    activeTab.classList.remove('visible');

                                    // 3. Готуємо новий таб
                                    nextTab.classList.add('visible'); // display: flex
                                    nextTab.classList.remove('active'); // явно ставимо opacity: 0

                                    // 4. Додаємо клас через маленьку паузу (16-32 мс)
                                    setTimeout(() => {
                                        nextTab.classList.add('active'); // opacity: 1
                                    }, 30); // або 0ms — теж може спрацювати, але 30 стабільніше
                                }, 150);
                            }

                            setTimeout(function (event) {
                                scrollTabBlock();
                            }, 155);
                        }
                    })
                })
            }
        })
    }
}

tabs();


// Scroll Tab Block
function scrollTabBlock() {
    let tabs_main = document.querySelectorAll('.tab__main');

    if (tabs_main) {
        tabs_main.forEach(function (tab_main) {
            let tab_inner = tab_main.querySelector('.tab__inner');

            if (tab_inner) {
                if (tab_inner.getBoundingClientRect().height > tab_main.getBoundingClientRect().height) {
                    tab_inner.classList.add('scroll');
                    tab_main.classList.add('scroll');
                } else {
                    tab_inner.classList.remove('scroll');
                    tab_main.classList.remove('scroll');
                }
            }
        })
    }
}

scrollTabBlock();

window.addEventListener('resize', scrollTabBlock);


// IBG
let ibg = document.querySelectorAll('.ibg');

if (ibg) {
    for (let item of ibg) {
        let ibgImg = item.querySelector('img');
        let ibgImgSrc = ibgImg.getAttribute('src');
        item.style.backgroundImage = `url(${ibgImgSrc})`;
    }
}

// Timer
let popup_timer = document.querySelector('.popup-timer');
let redirectTimeout;
let showPopupTimeout;

if (popup_timer) {
    let popup_timer_closes = popup_timer.querySelectorAll('.close');

    function startTimer() {
        clearTimeout(showPopupTimeout);
        showPopupTimeout = setTimeout(function () {
            popup_timer.classList.add('open');

            redirectTimeout = setTimeout(function () {
                window.location.href = 'intro.html';
            }, 5000);
        }, 40000);
    }

    startTimer();

    if (popup_timer_closes) {
        popup_timer_closes.forEach(function (popup_timer_close) {
            popup_timer_close.addEventListener('click', function (event) {
                event.preventDefault();

                popup_timer.classList.remove('open');

                clearTimeout(redirectTimeout);

                startTimer();
            });
        });
    }

    document.addEventListener('click', function () {
        if (!popup_timer.classList.contains('open')) {
            startTimer();
        }
    });
}


// Questions
let questions = [];
let currentIndex = 0;
let correctAnswers = 0;

document.addEventListener('DOMContentLoaded', async () => {
    // === СТОРІНКА З РЕЗУЛЬТАТОМ ===
    const bravoMain = document.querySelector('.bravo__main');
    const bilanResult = document.querySelector('.bilan__result');
    if (bravoMain || bilanResult) {
        const score = parseInt(localStorage.getItem('quizScore'), 10);
        const scoreEl = document.querySelector('.score-medal__value');

        if (!isNaN(score)) {
            scoreEl.textContent = `${score}/10`;

            if (score <= 4) {
                if (bravoMain) {
                    bravoMain.classList.add('bronze');
                }
                if (bilanResult) {
                    bilanResult.classList.add('bronze');
                }
            } else if (score <= 7) {
                if (bravoMain) {
                    bravoMain.classList.add('silver');
                }
                if (bilanResult) {
                    bilanResult.classList.add('silver');
                }
            } else {
                if (bravoMain) {
                    bravoMain.classList.add('gold');
                }
                if (bilanResult) {
                    bilanResult.classList.add('gold');
                }
            }
        } else {
            scoreEl.textContent = '0/10';
            if (bravoMain) {
                bravoMain.classList.add('bronze');
            }
            if (bilanResult) {
                bilanResult.classList.add('bronze');
            }
        }

        // НЕ видаляємо quizScore тут, щоб при оновленні bravo.html результат зберігався
        return; // далі код вікторини не виконується
    }

    // === СТОРІНКА З ВІКТОРИНОЮ ===
    const quizBody = document.querySelector('.quiz__body');
    if (!quizBody) return;

    // При вході на quiz.html видаляємо старе значення quizScore, якщо було
    localStorage.removeItem('quizScore');

    try {
        const response = await fetch('./quiz.json');
        const data = await response.json();

        currentIndex = 0;
        correctAnswers = 0;

        questions = data.tech.sort(() => 0.5 - Math.random()).slice(0, 10);
        renderQuestion();
    } catch (error) {
        console.error('Помилка при завантаженні quiz.json:', error);
    }
});

function renderQuestion() {
    const question = questions[currentIndex];

    document.querySelector('.question-quiz__number').textContent = currentIndex + 1;
    document.querySelector('.question-quiz__text').textContent = question.question;

    const quizBody = document.querySelector('.quiz__body');
    quizBody.classList.remove('answered');

    document.querySelector('.quiz__agent-true').classList.remove('active');
    document.querySelector('.quiz__agent-false').classList.remove('active');
    document.querySelector('.quiz__explanation').classList.remove('active');

    const nextBtn = document.querySelector('.btn-next');
    nextBtn.disabled = true;

    const listItems = document.querySelectorAll('.answer-options__item');
    question.answers.forEach((ans, i) => {
        const btn = listItems[i].querySelector('.btn-answer-options');
        btn.querySelector('.btn-answer-options__icon').textContent = ans.value.toUpperCase();
        btn.querySelector('.btn-answer-options__text').textContent = ans.label;
        btn.classList.remove('true', 'false', 'disabled');
        btn.disabled = false;

        btn.onclick = () => {
            const isCorrect = ans.value === question.correctAnswer;

            quizBody.classList.add('answered');
            document.querySelector('.quiz__explanation').classList.add('active');
            document.querySelector('.quiz__explanation p').textContent = question.feedback;

            if (isCorrect) {
                document.querySelector('.quiz__agent-true').classList.add('active');
                correctAnswers++; // Рахуємо правильну відповідь
                nextBtn.disabled = false;
            } else {
                document.querySelector('.quiz__agent-false').classList.add('active');

                setTimeout(() => {
                    const correctBtn = Array.from(document.querySelectorAll('.btn-answer-options'))
                        .find(b => {
                            const val = b.querySelector('.btn-answer-options__icon').textContent.toLowerCase();
                            return val === question.correctAnswer.toLowerCase();
                        });

                    if (correctBtn) {
                        correctBtn.classList.remove('disabled');
                        correctBtn.classList.add('true');
                    }

                    nextBtn.disabled = false;
                }, 500); // ← 0.5 секунди затримки
            }

            listItems.forEach((item, j) => {
                const b = item.querySelector('.btn-answer-options');
                const val = question.answers[j].value;

                if (isCorrect) {
                    if (val === ans.value) {
                        b.classList.add('true');
                    } else {
                        b.classList.add('disabled');
                    }
                } else {
                    if (val === ans.value) {
                        b.classList.add('false');
                    } else if (val === question.correctAnswer) {
                        b.classList.add('disabled');
                    } else {
                        b.classList.add('disabled');
                    }
                }

                b.disabled = true;
            });
        };
    });

    // Прогрес-бар
    const progressBar = document.querySelector('.progress-bar__line');
    if (progressBar) {
        const left = -100 + (currentIndex + 1) * 10;
        progressBar.style.left = `${left}%`;
    }
}

if (document.querySelector('.btn-next')) {
    document.querySelector('.btn-next').addEventListener('click', (e) => {
        e.preventDefault();
        currentIndex++;
        if (currentIndex < questions.length) {
            renderQuestion();
        } else {
            localStorage.setItem('quizScore', correctAnswers);
            window.location.href = 'bravo.html';
        }
    });
}

document.addEventListener('DOMContentLoaded', () => {
    // 1) При завантаженні сторінки робимо fade in
    setTimeout(() => {
        document.body.classList.add('fade-in');
    }, 10); // 10–50 мс достатньо

    // 2) Перехоплюємо кліки по всіх <a href>, крім тих, що ведуть на іншу сторінку блоку "наступне питання"
    document.querySelectorAll('a[href]').forEach(link => {
        const url = link.getAttribute('href');

        // Ігноруємо зовнішні лінки, mailto, tel, target="_blank", внутрішні якорі і посилання з класом btn-next
        if (
            link.classList.contains('btn-next') ||
            link.classList.contains('close') ||
            link.classList.contains('close-btn') ||
            url.startsWith('http') && !url.includes(window.location.host) ||
            url.startsWith('mailto:') ||
            url.startsWith('tel:') ||
            link.getAttribute('target') === '_blank' ||
            url.startsWith('#')
        ) {
            return;
        }

        link.addEventListener('click', function (e) {
            e.preventDefault();
            const href = this.getAttribute('href');

            // Додаємо клас fade-out, щоб почати анімацію opacity → 0
            document.body.classList.remove('fade-in');
            document.body.classList.add('fade-out');

            // Коли закінчиться анімація opacity, переходимо на href
            document.body.addEventListener('transitionend', function handler(evt) {
                if (evt.propertyName === 'opacity') {
                    document.body.removeEventListener('transitionend', handler);
                    window.location.href = href;
                }
            });
        });
    });
});

// Map Info Text Scroll
let map_info_mains = document.querySelectorAll('.info-points-map__main');

function scrollMapIinfoBlock() {
    if (map_info_mains) {
        map_info_mains.forEach(function (map_info_main) {
            let map_info_inner = map_info_main.querySelector('.info-points-map__inner');

            if (map_info_inner) {
                if (map_info_inner.getBoundingClientRect().height > map_info_main.getBoundingClientRect().height) {
                    map_info_inner.classList.add('scroll');
                    map_info_main.classList.add('scroll');
                } else {
                    map_info_inner.classList.remove('scroll');
                    map_info_main.classList.remove('scroll');
                }
            }
        })
    }
}

scrollMapIinfoBlock();

window.addEventListener('resize', scrollMapIinfoBlock);

// Zoom
let zoomTarget = document.querySelector('.map__image');
let zoomBtns = document.querySelectorAll('.points-map__btn');
let info_points_map_btns = document.querySelectorAll('.info-points-map__btn');
const body = document.querySelector('body');

if (zoomTarget && zoomBtns) {
    zoomBtns.forEach(function (zoomBtn) {
        zoomBtn.addEventListener('click', (e) => {
            e.stopPropagation(); // Щоб не спрацювали інші кліки
            const scale = 2.5;
            const points_map_item = zoomBtn.parentElement.closest('.points-map__item');

            // body.classList.add('lock');

            if (points_map_item) {
                let info_points_map = points_map_item.querySelector('.info-points-map');

                if (info_points_map) {
                    info_points_map.classList.add('active');
                }
            }

            zoomBtns.forEach(function (btn) {
                btn.classList.add('hide');
            })

            const targetRect = zoomTarget.getBoundingClientRect();
            const buttonRect = zoomBtn.getBoundingClientRect();

            // Розрахунок координат кнопки відносно zoomTarget
            const offsetX = buttonRect.left - targetRect.left + buttonRect.width / 2;
            const offsetY = buttonRect.top - targetRect.top + buttonRect.height / 2;

            const translateX = -(offsetX * (scale - 1)) / scale;
            const translateY = -(offsetY * (scale - 1)) / scale;

            zoomTarget.style.transform = `scale(${scale}) translate(${translateX}px, ${translateY}px)`;
        });


    })
}
if (info_points_map_btns) {
    info_points_map_btns.forEach(function (info_points_map_btn) {
        info_points_map_btn.addEventListener('click', function (event) {
            event.preventDefault();

            let parent_item = info_points_map_btn.parentElement.closest('.info-points-map');

            if (parent_item) {
                let vacancies_points_map = parent_item.nextElementSibling.closest('.vacancies-points-map');

                if (vacancies_points_map) {
                    parent_item.classList.remove('active');
                    vacancies_points_map.classList.add('active');

                    // Шукаємо елементи тільки всередині поточного блоку
                    const swiperContainer = vacancies_points_map.querySelector('.vacancies-points-map__swiper');
                    const paginationEl = vacancies_points_map.nextElementSibling.closest('.vacancies-points-map__pagination');
                    const nextBtn = vacancies_points_map.querySelector('.vacancies-points-map__btn_next');
                    const prevBtn = vacancies_points_map.querySelector('.vacancies-points-map__btn_prev');

                    // Ініціалізуємо Swiper тільки якщо контейнер знайдено
                    if (swiperContainer) {
                        const swiperVacancies = new Swiper(swiperContainer, {
                            effect: "fade",
                            pagination: {
                                el: paginationEl,
                                clickable: true,
                            },
                            navigation: {
                                nextEl: nextBtn,
                                prevEl: prevBtn,
                            },
                        });

                        // Додати заголовки в bullets
                        setTimeout(() => {
                            const bullets = paginationEl?.querySelectorAll('.swiper-pagination-bullet') || [];
                            const slides = swiperContainer?.querySelectorAll('.swiper-slide') || [];

                            bullets.forEach((bullet, index) => {
                                const slide = slides[index];
                                const title = slide?.querySelector('.item-vacancies__title')?.textContent?.trim();
                                if (title) bullet.textContent = title;
                            });
                        }, 0);
                    }

                    // Додаємо клас активності для pagination, якщо він існує
                    if (paginationEl) {
                        paginationEl.classList.add('active');
                    }
                }
            }
        });
    });
}

function closeMap() {
    let close_btns = document.querySelectorAll('.close-map-info');

    if (close_btns && zoomTarget && zoomBtns) {
        close_btns.forEach(function (close_btn) {
            close_btn.addEventListener('click', function (event) {
                event.preventDefault();

                zoomTarget.style.transform = `scale(1) translate(0px, 0px)`;
                // body.classList.remove('lock');

                setTimeout(function (event) {
                    zoomBtns.forEach(function (btn) {
                        btn.classList.remove('hide');
                    })
                }, 500);


                if (document.querySelector('.info-points-map.active')) {
                    document.querySelector('.info-points-map.active').classList.remove('active');
                }

                if (document.querySelector('.points-map__vacancies.active')) {
                    document.querySelector('.points-map__vacancies.active').classList.remove('active');
                }

                if (document.querySelector('.vacancies-points-map__pagination.active')) {
                    document.querySelector('.vacancies-points-map__pagination.active').classList.remove('active');
                }
            })
        })
    }
}

closeMap();

// Universes Json
document.addEventListener("DOMContentLoaded", () => {
    const items = document.querySelectorAll('.points-map__item');
    if (!items.length) return;

    Promise.all([
        fetch('universes.json').then(res => res.json()),
        fetch('careers.json').then(res => res.json())
    ])
        .then(([universesData, careersData]) => {
            items.forEach(item => {
                const id = item.dataset.universes;
                const universe = universesData.universes.find(u => u.id === id);
                if (!universe) return;

                // Вставка title та description
                const titleEl = item.querySelector(".info-points-map__title");
                const descEl = item.querySelector(".info-points-map__text p");
                if (titleEl) titleEl.textContent = universe.title;
                if (descEl) descEl.textContent = universe.description;

                // Шаблон слайду
                const swiperWrapper = item.querySelector(".vacancies-points-map__swiper .swiper-wrapper");
                const slideTemplate = swiperWrapper?.querySelector(".swiper-slide");
                if (!swiperWrapper || !slideTemplate) return;

                swiperWrapper.innerHTML = '';

                universe.careers.forEach(careerShort => {
                    const fullCareer = careersData.careers.find(c => c.id === careerShort.id);
                    if (!fullCareer) return;

                    const newSlide = slideTemplate.cloneNode(true);
                    newSlide.setAttribute("data-id", fullCareer.id);

                    // Title
                    const titleEl = newSlide.querySelector(".item-vacancies__title");
                    if (titleEl) titleEl.textContent = fullCareer.title;

                    // Sector tag
                    const tagEl = newSlide.querySelector(".top-item-vacancies__tag");
                    if (tagEl) {
                        tagEl.textContent = fullCareer.sector || '';
                        tagEl.classList.remove("top-item-vacancies__tag_orange", "top-item-vacancies__tag_pink");
                        if (fullCareer.sector === "Transport Urbain") {
                            tagEl.classList.add("top-item-vacancies__tag_orange");
                        } else if (fullCareer.sector === "Transport Ferroviaire") {
                            tagEl.classList.add("top-item-vacancies__tag_pink");
                        }
                    }

                    // Tab elements
                    const tabTop = newSlide.querySelector(".tab__top");
                    const tabBtns = Array.from(tabTop?.querySelectorAll(".tab__btn") || []);
                    const descriptionText = fullCareer.description;
                    const prerequisitesText = fullCareer.prerequisites;
                    const environmentText = fullCareer.environment;

                    const tabBlocks = {
                        description: newSlide.querySelector('[data-tab="description"] .item-vacancies__text'),
                        prerequis: newSlide.querySelector('[data-tab="pré-requis"] ul.item-vacancies__list'),
                        environment: newSlide.querySelector('[data-tab="environnement-de-travail"] .item-vacancies__text')
                    };

                    // Description
                    if (descriptionText && tabBlocks.description) {
                        tabBlocks.description.textContent = descriptionText.trim();
                    }

                    // Prerequisites
                    if (prerequisitesText && tabBlocks.prerequis) {
                        const list = tabBlocks.prerequis;
                        list.innerHTML = ''; // clear existing <li>
                        prerequisitesText.split(/\n+/).forEach(pr => {
                            if (pr.trim()) {
                                const li = document.createElement('li');
                                li.classList.add('item-vacancies__list-item');
                                li.textContent = pr.trim();
                                list.appendChild(li);
                            }
                        });
                    }

                    // Environment
                    if (environmentText && tabBlocks.environment) {
                        tabBlocks.environment.textContent = environmentText.trim();
                    }

                    // Обробка прихованих табів
                    const checkAndHideTab = (key, dataValue) => {
                        if (dataValue == null) {
                            const btn = tabTop.querySelector(`.tab__btn[data-tab="${key}"]`);
                            const block = newSlide.querySelector(`.tab__block[data-tab="${key}"]`);
                            if (btn) btn.style.display = "none";
                            if (block) block.style.display = "none";
                            return btn?.classList.contains("active");
                        }
                        return false;
                    };

                    const activeRemoved = {
                        description: checkAndHideTab("description", descriptionText),
                        "pré-requis": checkAndHideTab("pré-requis", prerequisitesText),
                        "environnement-de-travail": checkAndHideTab("environnement-de-travail", environmentText)
                    };

                    // Якщо активний таб приховано — перемкнути активний клас на перший доступний
                    const currentActive = tabBtns.find(btn => btn.classList.contains("active") && btn.style.display === "none");
                    if (currentActive) {
                        currentActive.classList.remove("active");
                        const firstVisibleBtn = tabBtns.find(btn => btn.style.display !== "none");
                        const firstBlock = newSlide.querySelector(`.tab__block[data-tab="${firstVisibleBtn.dataset.tab}"]`);
                        if (firstVisibleBtn) firstVisibleBtn.classList.add("active");
                        if (firstBlock) {
                            newSlide.querySelectorAll('.tab__block').forEach(b => b.classList.remove('active', 'visible'));
                            firstBlock.classList.add("active", "visible");
                        }
                    }

                    swiperWrapper.appendChild(newSlide);

                    // --- Обробка лайків та збереження у localStorage ---
                    const likeBtn = newSlide.querySelector('.top-item-vacancies__like');
                    if (likeBtn) {
                        const slide = newSlide;
                        const id = slide?.dataset.id;
                        const tag = slide.querySelector('.top-item-vacancies__tag')?.textContent?.trim() || '';
                        const title = slide.querySelector('.item-vacancies__title')?.textContent?.trim() || '';
                        const imgSrc = slide.querySelector('.item-vacancies__image img')?.getAttribute('src') || '';
                        const storageKey = 'likedVacancies';
                        const existing = JSON.parse(localStorage.getItem(storageKey)) || [];

                        // Активувати, якщо лайк уже є
                        if (existing.some(item => item.id === id)) {
                            likeBtn.classList.add('active');
                        }

                        // Обробка кліку
                        likeBtn.addEventListener('click', () => {
                            let liked = JSON.parse(localStorage.getItem(storageKey)) || [];
                            const index = liked.findIndex(item => item.id === id);

                            if (index > -1) {
                                liked.splice(index, 1);
                                likeBtn.classList.remove('active');
                            } else {
                                liked.push({ id, tag, title, imgSrc });
                                likeBtn.classList.add('active');
                            }

                            localStorage.setItem(storageKey, JSON.stringify(liked));

                            const footerExploration = document.querySelector('.footer-2__exploration');
                            const anyActiveLikes = document.querySelector('.top-item-vacancies__like.active');

                            if (anyActiveLikes && footerExploration) {
                                footerExploration.classList.add('active');
                            } else if (!anyActiveLikes && footerExploration && footerExploration.classList.contains('active')) {
                                footerExploration.classList.remove('active');
                                // Очищуємо localStorage, коли клас 'active' прибирається
                                localStorage.removeItem(storageKey); // або localStorage.clear() якщо хочеш очистити все
                            }
                        });
                    }
                });
            });

            closeMap();
            tabs();
            scrollTabBlock();
        })
        .catch(error => {
            console.error("Erreur lors du chargement des fichiers JSON :", error);
        });
});

// Local Storage Likes
document.addEventListener("DOMContentLoaded", () => {
    const storageKey = 'likedVacancies';
    const bilanSection = document.querySelector('.bilan__vacancies');
    const explorationBtn = document.querySelector('.footer-2__exploration');

    // Якщо ми на welcome.html — очищаємо localStorage і прибираємо клас
    if (window.location.pathname.includes('welcome.html')) {
        localStorage.removeItem(storageKey);
        if (explorationBtn) {
            explorationBtn.classList.remove('active');
        }
        return; // Далі нічого не виконуємо
    }

    const liked = JSON.parse(localStorage.getItem(storageKey)) || [];

    if (explorationBtn) {
        if (liked.length > 0) {
            explorationBtn.classList.add('active');
        } else {
            explorationBtn.classList.remove('active');
        }
    }

    if (!bilanSection) return;
    const row = bilanSection.querySelector('.vacancies__row');

    if (!liked.length) {
        bilanSection.style.display = 'none';
        return;
    }

    liked.forEach(({ id, tag, title, imgSrc }) => {
        const column = document.createElement('div');
        column.classList.add('vacancies__column');

        let tagClass = '';
        if (tag === 'Transport Urbain') {
            tagClass = 'top-item-vacancies__tag_orange';
        } else if (tag === 'Transport Ferroviaire') {
            tagClass = 'top-item-vacancies__tag_pink';
        }

        column.innerHTML = `
            <div class="vacancies__item item-vacancies" data-id="${id}">
                <div class="item-vacancies__top top-item-vacancies">
                    <div class="top-item-vacancies__tag ${tagClass}">${tag}</div>
                </div>
                <div class="item-vacancies__title-block">
                    <div class="item-vacancies__image">
                        <img src="${imgSrc}" alt="vacancies-img">
                    </div>
                    <h3 class="item-vacancies__title">${title}</h3>
                </div>
            </div>
        `;

        row.appendChild(column);
    });
});



// Popups
let close_btns = document.querySelectorAll('.close-btn');

if (close_btns) {
    close_btns.forEach(function (close_btn) {
        close_btn.addEventListener('click', function (event) {
            event.preventDefault();

            if (document.querySelector('.popup.open')) {
                document.querySelector('.popup.open').classList.remove('open');
            }
        })
    })
}


// Welcom Video
document.addEventListener("DOMContentLoaded", () => {
    const video = document.querySelector('.welcome__video');
    const poster = document.querySelector('.welcome__poster');

    if (video && poster) {
        video.addEventListener('canplaythrough', () => {
            poster.classList.add('hidden');
        });
    }
});